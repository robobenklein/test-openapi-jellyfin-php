<?php
/**
 * ProfileConditionValue
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.10
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ProfileConditionValue Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProfileConditionValue
{
    /**
     * Possible values of this enum
     */
    public const AUDIO_CHANNELS = 'AudioChannels';

    public const AUDIO_BITRATE = 'AudioBitrate';

    public const AUDIO_PROFILE = 'AudioProfile';

    public const WIDTH = 'Width';

    public const HEIGHT = 'Height';

    public const HAS64_BIT_OFFSETS = 'Has64BitOffsets';

    public const PACKET_LENGTH = 'PacketLength';

    public const VIDEO_BIT_DEPTH = 'VideoBitDepth';

    public const VIDEO_BITRATE = 'VideoBitrate';

    public const VIDEO_FRAMERATE = 'VideoFramerate';

    public const VIDEO_LEVEL = 'VideoLevel';

    public const VIDEO_PROFILE = 'VideoProfile';

    public const VIDEO_TIMESTAMP = 'VideoTimestamp';

    public const IS_ANAMORPHIC = 'IsAnamorphic';

    public const REF_FRAMES = 'RefFrames';

    public const NUM_AUDIO_STREAMS = 'NumAudioStreams';

    public const NUM_VIDEO_STREAMS = 'NumVideoStreams';

    public const IS_SECONDARY_AUDIO = 'IsSecondaryAudio';

    public const VIDEO_CODEC_TAG = 'VideoCodecTag';

    public const IS_AVC = 'IsAvc';

    public const IS_INTERLACED = 'IsInterlaced';

    public const AUDIO_SAMPLE_RATE = 'AudioSampleRate';

    public const AUDIO_BIT_DEPTH = 'AudioBitDepth';

    public const VIDEO_RANGE_TYPE = 'VideoRangeType';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::AUDIO_CHANNELS,
            self::AUDIO_BITRATE,
            self::AUDIO_PROFILE,
            self::WIDTH,
            self::HEIGHT,
            self::HAS64_BIT_OFFSETS,
            self::PACKET_LENGTH,
            self::VIDEO_BIT_DEPTH,
            self::VIDEO_BITRATE,
            self::VIDEO_FRAMERATE,
            self::VIDEO_LEVEL,
            self::VIDEO_PROFILE,
            self::VIDEO_TIMESTAMP,
            self::IS_ANAMORPHIC,
            self::REF_FRAMES,
            self::NUM_AUDIO_STREAMS,
            self::NUM_VIDEO_STREAMS,
            self::IS_SECONDARY_AUDIO,
            self::VIDEO_CODEC_TAG,
            self::IS_AVC,
            self::IS_INTERLACED,
            self::AUDIO_SAMPLE_RATE,
            self::AUDIO_BIT_DEPTH,
            self::VIDEO_RANGE_TYPE
        ];
    }
}


