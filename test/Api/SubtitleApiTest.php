<?php
/**
 * SubtitleApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.10
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SubtitleApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SubtitleApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deleteSubtitle
     *
     * Deletes an external subtitle file..
     *
     */
    public function testDeleteSubtitle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadRemoteSubtitles
     *
     * Downloads a remote subtitle..
     *
     */
    public function testDownloadRemoteSubtitles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFallbackFont
     *
     * Gets a fallback font file..
     *
     */
    public function testGetFallbackFont()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFallbackFontList
     *
     * Gets a list of available fallback font files..
     *
     */
    public function testGetFallbackFontList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRemoteSubtitles
     *
     * Gets the remote subtitles..
     *
     */
    public function testGetRemoteSubtitles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubtitle
     *
     * Gets subtitles in a specified format..
     *
     */
    public function testGetSubtitle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubtitlePlaylist
     *
     * Gets an HLS subtitle playlist..
     *
     */
    public function testGetSubtitlePlaylist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubtitleWithTicks
     *
     * Gets subtitles in a specified format..
     *
     */
    public function testGetSubtitleWithTicks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchRemoteSubtitles
     *
     * Search remote subtitles..
     *
     */
    public function testSearchRemoteSubtitles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uploadSubtitle
     *
     * Upload an external subtitle file..
     *
     */
    public function testUploadSubtitle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
