<?php
/**
 * LibraryApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.10
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * LibraryApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class LibraryApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deleteItem
     *
     * Deletes an item from the library and filesystem..
     *
     */
    public function testDeleteItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteItems
     *
     * Deletes items from the library and filesystem..
     *
     */
    public function testDeleteItems()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAncestors
     *
     * Gets all parents of an item..
     *
     */
    public function testGetAncestors()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCriticReviews
     *
     * Gets critic review for an item..
     *
     */
    public function testGetCriticReviews()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDownload
     *
     * Downloads item media..
     *
     */
    public function testGetDownload()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFile
     *
     * Get the original file of an item..
     *
     */
    public function testGetFile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getItemCounts
     *
     * Get item counts..
     *
     */
    public function testGetItemCounts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getLibraryOptionsInfo
     *
     * Gets the library options info..
     *
     */
    public function testGetLibraryOptionsInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMediaFolders
     *
     * Gets all user media folders..
     *
     */
    public function testGetMediaFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPhysicalPaths
     *
     * Gets a list of physical paths from virtual folders..
     *
     */
    public function testGetPhysicalPaths()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSimilarAlbums
     *
     * Gets similar items..
     *
     */
    public function testGetSimilarAlbums()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSimilarArtists
     *
     * Gets similar items..
     *
     */
    public function testGetSimilarArtists()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSimilarItems
     *
     * Gets similar items..
     *
     */
    public function testGetSimilarItems()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSimilarMovies
     *
     * Gets similar items..
     *
     */
    public function testGetSimilarMovies()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSimilarShows
     *
     * Gets similar items..
     *
     */
    public function testGetSimilarShows()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSimilarTrailers
     *
     * Gets similar items..
     *
     */
    public function testGetSimilarTrailers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getThemeMedia
     *
     * Get theme songs and videos for an item..
     *
     */
    public function testGetThemeMedia()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getThemeSongs
     *
     * Get theme songs for an item..
     *
     */
    public function testGetThemeSongs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getThemeVideos
     *
     * Get theme videos for an item..
     *
     */
    public function testGetThemeVideos()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postAddedMovies
     *
     * Reports that new movies have been added by an external source..
     *
     */
    public function testPostAddedMovies()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postAddedSeries
     *
     * Reports that new episodes of a series have been added by an external source..
     *
     */
    public function testPostAddedSeries()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postUpdatedMedia
     *
     * Reports that new movies have been added by an external source..
     *
     */
    public function testPostUpdatedMedia()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postUpdatedMovies
     *
     * Reports that new movies have been added by an external source..
     *
     */
    public function testPostUpdatedMovies()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postUpdatedSeries
     *
     * Reports that new episodes of a series have been added by an external source..
     *
     */
    public function testPostUpdatedSeries()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for refreshLibrary
     *
     * Starts a library scan..
     *
     */
    public function testRefreshLibrary()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
