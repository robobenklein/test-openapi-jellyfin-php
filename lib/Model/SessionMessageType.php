<?php
/**
 * SessionMessageType
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.10
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * SessionMessageType Class Doc Comment
 *
 * @category Class
 * @description The different kinds of messages that are used in the WebSocket api.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SessionMessageType
{
    /**
     * Possible values of this enum
     */
    public const FORCE_KEEP_ALIVE = 'ForceKeepAlive';

    public const GENERAL_COMMAND = 'GeneralCommand';

    public const USER_DATA_CHANGED = 'UserDataChanged';

    public const SESSIONS = 'Sessions';

    public const PLAY = 'Play';

    public const SYNC_PLAY_COMMAND = 'SyncPlayCommand';

    public const SYNC_PLAY_GROUP_UPDATE = 'SyncPlayGroupUpdate';

    public const PLAYSTATE = 'Playstate';

    public const RESTART_REQUIRED = 'RestartRequired';

    public const SERVER_SHUTTING_DOWN = 'ServerShuttingDown';

    public const SERVER_RESTARTING = 'ServerRestarting';

    public const LIBRARY_CHANGED = 'LibraryChanged';

    public const USER_DELETED = 'UserDeleted';

    public const USER_UPDATED = 'UserUpdated';

    public const SERIES_TIMER_CREATED = 'SeriesTimerCreated';

    public const TIMER_CREATED = 'TimerCreated';

    public const SERIES_TIMER_CANCELLED = 'SeriesTimerCancelled';

    public const TIMER_CANCELLED = 'TimerCancelled';

    public const REFRESH_PROGRESS = 'RefreshProgress';

    public const SCHEDULED_TASK_ENDED = 'ScheduledTaskEnded';

    public const PACKAGE_INSTALLATION_CANCELLED = 'PackageInstallationCancelled';

    public const PACKAGE_INSTALLATION_FAILED = 'PackageInstallationFailed';

    public const PACKAGE_INSTALLATION_COMPLETED = 'PackageInstallationCompleted';

    public const PACKAGE_INSTALLING = 'PackageInstalling';

    public const PACKAGE_UNINSTALLED = 'PackageUninstalled';

    public const ACTIVITY_LOG_ENTRY = 'ActivityLogEntry';

    public const SCHEDULED_TASKS_INFO = 'ScheduledTasksInfo';

    public const ACTIVITY_LOG_ENTRY_START = 'ActivityLogEntryStart';

    public const ACTIVITY_LOG_ENTRY_STOP = 'ActivityLogEntryStop';

    public const SESSIONS_START = 'SessionsStart';

    public const SESSIONS_STOP = 'SessionsStop';

    public const SCHEDULED_TASKS_INFO_START = 'ScheduledTasksInfoStart';

    public const SCHEDULED_TASKS_INFO_STOP = 'ScheduledTasksInfoStop';

    public const KEEP_ALIVE = 'KeepAlive';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::FORCE_KEEP_ALIVE,
            self::GENERAL_COMMAND,
            self::USER_DATA_CHANGED,
            self::SESSIONS,
            self::PLAY,
            self::SYNC_PLAY_COMMAND,
            self::SYNC_PLAY_GROUP_UPDATE,
            self::PLAYSTATE,
            self::RESTART_REQUIRED,
            self::SERVER_SHUTTING_DOWN,
            self::SERVER_RESTARTING,
            self::LIBRARY_CHANGED,
            self::USER_DELETED,
            self::USER_UPDATED,
            self::SERIES_TIMER_CREATED,
            self::TIMER_CREATED,
            self::SERIES_TIMER_CANCELLED,
            self::TIMER_CANCELLED,
            self::REFRESH_PROGRESS,
            self::SCHEDULED_TASK_ENDED,
            self::PACKAGE_INSTALLATION_CANCELLED,
            self::PACKAGE_INSTALLATION_FAILED,
            self::PACKAGE_INSTALLATION_COMPLETED,
            self::PACKAGE_INSTALLING,
            self::PACKAGE_UNINSTALLED,
            self::ACTIVITY_LOG_ENTRY,
            self::SCHEDULED_TASKS_INFO,
            self::ACTIVITY_LOG_ENTRY_START,
            self::ACTIVITY_LOG_ENTRY_STOP,
            self::SESSIONS_START,
            self::SESSIONS_STOP,
            self::SCHEDULED_TASKS_INFO_START,
            self::SCHEDULED_TASKS_INFO_STOP,
            self::KEEP_ALIVE
        ];
    }
}


