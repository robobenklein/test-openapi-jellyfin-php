<?php
/**
 * NetworkConfigurationTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.10
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * NetworkConfigurationTest Class Doc Comment
 *
 * @category    Class
 * @description Defines the Jellyfin.Networking.Configuration.NetworkConfiguration.
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class NetworkConfigurationTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "NetworkConfiguration"
     */
    public function testNetworkConfiguration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "require_https"
     */
    public function testPropertyRequireHttps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "certificate_path"
     */
    public function testPropertyCertificatePath()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "certificate_password"
     */
    public function testPropertyCertificatePassword()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_url"
     */
    public function testPropertyBaseUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "public_https_port"
     */
    public function testPropertyPublicHttpsPort()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "http_server_port_number"
     */
    public function testPropertyHttpServerPortNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "https_port_number"
     */
    public function testPropertyHttpsPortNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_https"
     */
    public function testPropertyEnableHttps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "public_port"
     */
    public function testPropertyPublicPort()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "upn_p_create_http_port_map"
     */
    public function testPropertyUpnPCreateHttpPortMap()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "udp_port_range"
     */
    public function testPropertyUdpPortRange()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_ipv6"
     */
    public function testPropertyEnableIpv6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_ipv4"
     */
    public function testPropertyEnableIpv4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_ssdp_tracing"
     */
    public function testPropertyEnableSsdpTracing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ssdp_tracing_filter"
     */
    public function testPropertySsdpTracingFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "udp_send_count"
     */
    public function testPropertyUdpSendCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "udp_send_delay"
     */
    public function testPropertyUdpSendDelay()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ignore_virtual_interfaces"
     */
    public function testPropertyIgnoreVirtualInterfaces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "virtual_interface_names"
     */
    public function testPropertyVirtualInterfaceNames()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gateway_monitor_period"
     */
    public function testPropertyGatewayMonitorPeriod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_multi_socket_binding"
     */
    public function testPropertyEnableMultiSocketBinding()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "trust_all_ip6_interfaces"
     */
    public function testPropertyTrustAllIp6Interfaces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hd_homerun_port_range"
     */
    public function testPropertyHdHomerunPortRange()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "published_server_uri_by_subnet"
     */
    public function testPropertyPublishedServerUriBySubnet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auto_discovery_tracing"
     */
    public function testPropertyAutoDiscoveryTracing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auto_discovery"
     */
    public function testPropertyAutoDiscovery()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "remote_ip_filter"
     */
    public function testPropertyRemoteIpFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_remote_ip_filter_blacklist"
     */
    public function testPropertyIsRemoteIpFilterBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_upn_p"
     */
    public function testPropertyEnableUpnP()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_remote_access"
     */
    public function testPropertyEnableRemoteAccess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_network_subnets"
     */
    public function testPropertyLocalNetworkSubnets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_network_addresses"
     */
    public function testPropertyLocalNetworkAddresses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "known_proxies"
     */
    public function testPropertyKnownProxies()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_published_server_uri_by_request"
     */
    public function testPropertyEnablePublishedServerUriByRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
