<?php
/**
 * UpdateUserPolicyRequestTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.10
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * UpdateUserPolicyRequestTest Class Doc Comment
 *
 * @category    Class
 * @description UpdateUserPolicyRequest
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class UpdateUserPolicyRequestTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "UpdateUserPolicyRequest"
     */
    public function testUpdateUserPolicyRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_administrator"
     */
    public function testPropertyIsAdministrator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_hidden"
     */
    public function testPropertyIsHidden()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_disabled"
     */
    public function testPropertyIsDisabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_parental_rating"
     */
    public function testPropertyMaxParentalRating()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "blocked_tags"
     */
    public function testPropertyBlockedTags()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_user_preference_access"
     */
    public function testPropertyEnableUserPreferenceAccess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "access_schedules"
     */
    public function testPropertyAccessSchedules()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "block_unrated_items"
     */
    public function testPropertyBlockUnratedItems()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_remote_control_of_other_users"
     */
    public function testPropertyEnableRemoteControlOfOtherUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_shared_device_control"
     */
    public function testPropertyEnableSharedDeviceControl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_remote_access"
     */
    public function testPropertyEnableRemoteAccess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_live_tv_management"
     */
    public function testPropertyEnableLiveTvManagement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_live_tv_access"
     */
    public function testPropertyEnableLiveTvAccess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_media_playback"
     */
    public function testPropertyEnableMediaPlayback()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_audio_playback_transcoding"
     */
    public function testPropertyEnableAudioPlaybackTranscoding()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_video_playback_transcoding"
     */
    public function testPropertyEnableVideoPlaybackTranscoding()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_playback_remuxing"
     */
    public function testPropertyEnablePlaybackRemuxing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "force_remote_source_transcoding"
     */
    public function testPropertyForceRemoteSourceTranscoding()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_content_deletion"
     */
    public function testPropertyEnableContentDeletion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_content_deletion_from_folders"
     */
    public function testPropertyEnableContentDeletionFromFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_content_downloading"
     */
    public function testPropertyEnableContentDownloading()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_sync_transcoding"
     */
    public function testPropertyEnableSyncTranscoding()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_media_conversion"
     */
    public function testPropertyEnableMediaConversion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enabled_devices"
     */
    public function testPropertyEnabledDevices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_all_devices"
     */
    public function testPropertyEnableAllDevices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enabled_channels"
     */
    public function testPropertyEnabledChannels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_all_channels"
     */
    public function testPropertyEnableAllChannels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enabled_folders"
     */
    public function testPropertyEnabledFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_all_folders"
     */
    public function testPropertyEnableAllFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "invalid_login_attempt_count"
     */
    public function testPropertyInvalidLoginAttemptCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "login_attempts_before_lockout"
     */
    public function testPropertyLoginAttemptsBeforeLockout()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_active_sessions"
     */
    public function testPropertyMaxActiveSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_public_sharing"
     */
    public function testPropertyEnablePublicSharing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "blocked_media_folders"
     */
    public function testPropertyBlockedMediaFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "blocked_channels"
     */
    public function testPropertyBlockedChannels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "remote_client_bitrate_limit"
     */
    public function testPropertyRemoteClientBitrateLimit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authentication_provider_id"
     */
    public function testPropertyAuthenticationProviderId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "password_reset_provider_id"
     */
    public function testPropertyPasswordResetProviderId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sync_play_access"
     */
    public function testPropertySyncPlayAccess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
