<?php
/**
 * ServerConfigurationTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.10
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ServerConfigurationTest Class Doc Comment
 *
 * @category    Class
 * @description Represents the server configuration.
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ServerConfigurationTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ServerConfiguration"
     */
    public function testServerConfiguration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "log_file_retention_days"
     */
    public function testPropertyLogFileRetentionDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_startup_wizard_completed"
     */
    public function testPropertyIsStartupWizardCompleted()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cache_path"
     */
    public function testPropertyCachePath()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "previous_version"
     */
    public function testPropertyPreviousVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "previous_version_str"
     */
    public function testPropertyPreviousVersionStr()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_metrics"
     */
    public function testPropertyEnableMetrics()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_normalized_item_by_name_ids"
     */
    public function testPropertyEnableNormalizedItemByNameIds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_port_authorized"
     */
    public function testPropertyIsPortAuthorized()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quick_connect_available"
     */
    public function testPropertyQuickConnectAvailable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_case_sensitive_item_ids"
     */
    public function testPropertyEnableCaseSensitiveItemIds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_live_tv_channel_user_data_name"
     */
    public function testPropertyDisableLiveTvChannelUserDataName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "metadata_path"
     */
    public function testPropertyMetadataPath()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "metadata_network_path"
     */
    public function testPropertyMetadataNetworkPath()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preferred_metadata_language"
     */
    public function testPropertyPreferredMetadataLanguage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "metadata_country_code"
     */
    public function testPropertyMetadataCountryCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sort_replace_characters"
     */
    public function testPropertySortReplaceCharacters()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sort_remove_characters"
     */
    public function testPropertySortRemoveCharacters()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sort_remove_words"
     */
    public function testPropertySortRemoveWords()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_resume_pct"
     */
    public function testPropertyMinResumePct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_resume_pct"
     */
    public function testPropertyMaxResumePct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_resume_duration_seconds"
     */
    public function testPropertyMinResumeDurationSeconds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_audiobook_resume"
     */
    public function testPropertyMinAudiobookResume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_audiobook_resume"
     */
    public function testPropertyMaxAudiobookResume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "library_monitor_delay"
     */
    public function testPropertyLibraryMonitorDelay()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "image_saving_convention"
     */
    public function testPropertyImageSavingConvention()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "metadata_options"
     */
    public function testPropertyMetadataOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "skip_deserialization_for_basic_types"
     */
    public function testPropertySkipDeserializationForBasicTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "server_name"
     */
    public function testPropertyServerName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ui_culture"
     */
    public function testPropertyUiCulture()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "save_metadata_hidden"
     */
    public function testPropertySaveMetadataHidden()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "content_types"
     */
    public function testPropertyContentTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "remote_client_bitrate_limit"
     */
    public function testPropertyRemoteClientBitrateLimit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_folder_view"
     */
    public function testPropertyEnableFolderView()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_grouping_into_collections"
     */
    public function testPropertyEnableGroupingIntoCollections()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "display_specials_within_seasons"
     */
    public function testPropertyDisplaySpecialsWithinSeasons()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "codecs_used"
     */
    public function testPropertyCodecsUsed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plugin_repositories"
     */
    public function testPropertyPluginRepositories()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_external_content_in_suggestions"
     */
    public function testPropertyEnableExternalContentInSuggestions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "image_extraction_timeout_ms"
     */
    public function testPropertyImageExtractionTimeoutMs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "path_substitutions"
     */
    public function testPropertyPathSubstitutions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_slow_response_warning"
     */
    public function testPropertyEnableSlowResponseWarning()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "slow_response_threshold_ms"
     */
    public function testPropertySlowResponseThresholdMs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cors_hosts"
     */
    public function testPropertyCorsHosts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "activity_log_retention_days"
     */
    public function testPropertyActivityLogRetentionDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "library_scan_fanout_concurrency"
     */
    public function testPropertyLibraryScanFanoutConcurrency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "library_metadata_refresh_concurrency"
     */
    public function testPropertyLibraryMetadataRefreshConcurrency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "remove_old_plugins"
     */
    public function testPropertyRemoveOldPlugins()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_client_log_upload"
     */
    public function testPropertyAllowClientLogUpload()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
